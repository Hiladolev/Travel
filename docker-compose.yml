#MYSQL Container + REST API Container + React Container + volume (internal docker hdd)
#NOTE: for hot-reloading React, use => "start": "WATCHPACK_POLLING=true react-scripts start" in package.json

services:
# Travel database (mysql service):
  travel-database-service:
    #Image name to create from DockerFile
    image: hiladolev/travel-database-image:1.0

    # Build the image (if not exists) from specified Dockerfile location:
    build: ./database

    # Container name:
    container_name: travel-database-container

    #port binding [host:container]
    ports:
      - 3307:3307

    #Environment variables needed by MySql:
    environment:
      MYSQL_HOST: localhost #internally for the container
      MYSQL_DATABASE: travel
      MYSQL_ROOT_PASSWORD: 12345678 #needed by mysql image
     

    #On crash - restart container, unless manually stopped:
    restart: unless-stopped

    #Database volumes:
    volumes:
      - travel-db:/var/lib/mysql

#---------------------------------------------------------------

# Travel backend service
  travel-backend-service:

    #Image name to create from Dockerfile:
    image: hiladolev/travel-backend-image:1.0

    #Build the image (if not exists) from a specifiec dockerfile location:
    build: ./backend

    #container name
    container_name: travel-backend-container

    #Port binding (host:container):
    ports:
      - 4000:4000

    #Environment variables needed by this service:
    environment:
      PORT: 4000
      MYSQL_HOST:  travel-database-service #Above database service name is the host name
      MYSQL_DATABASE: travel
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345678

    #On crash - restart container, unless manually stopped:
    # restart: unless-stopped

    #Host bolume for mounting backend development files to backend container
    # volumes:
    #   - ./backend:/app

    # On which service we are depending on (starting/stopping order):
    depends_on:
      - travel-database-service
#---------------------------------------------------------------

# # NorthWind frontend service
#   northwind-frontend-service:
#     #Image name to create  from dockerfile:
#     image: mindalizeev/northwind-frontend-image:1.0

#     #Build the image (if not exists) from specified Dockerfile location:
#     build: ./Frontend

#     #Container name:
#     container_name: northwind-frontend-container

#     #Port binding (host:container):
#     ports:
#       - 3000:3000

#     #On crash - restart container, unless manually stopped:
#     restart: unless-stopped

#     #Host volume for mounting Frontend development files to Frontend container
#     volumes:
#       - ./Frontend:/app

#     #On which service we are depending on (start/stopping order):
#     depends_on:
#       - northwind-backend-service

#---------------------------------------------------------------

# volumes
volumes:
  travel-db:


 #for running docker-compse , run the command inside the docker-compose.yml file
 #docker-compose up -d